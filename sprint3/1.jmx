<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">5</stringProp>
          <stringProp name="RandomTimer.range">1</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request [showScenario]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Dodanie książki&quot;,&#xd;
    &quot;actors&quot;: [&quot;Bibliotekarz&quot;, &quot;Sprzątaczka&quot;],&#xd;
    &quot;system_actors&quot;: [&quot;System&quot;, &quot;Systemy&quot;],&#xd;
    &quot;steps&quot;: [&#xd;
    	&quot;Bibliotekarz wybiera opcje dodania nowej pozycji książkowej&quot;, &#xd;
    	&quot;Wyświetla się formularz&quot;, &#xd;
    	&quot;Sprzątaczka otwiera okno&quot;,&#xd;
    	&quot;Bibliotekarz podaje dane książki&quot;, &#xd;
    	&quot;IF: Bibliotekarz pragnie dodać egzemplarze książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		]&#xd;
    	],&#xd;
    	&quot;Bibliotekarz zatwierdza dodanie książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		],&#xd;
    		&quot;Zrobione&quot;&#xd;
    	],&#xd;
    	&quot;System informuje o poprawnym dodaniu książki&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">showScenario</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Assertion" enabled="true">
            <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
            <stringProp name="SizeAssertion.size">1298</stringProp>
            <intProp name="SizeAssertion.operator">1</intProp>
          </SizeAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.steps.[7]</stringProp>
            <stringProp name="EXPECTED_VALUE">5.3. FOR EACH: egzemplarz:</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.steps.[20]</stringProp>
            <stringProp name="EXPECTED_VALUE">6.4. Zrobione</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request [showScenario/2]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Dodanie książki&quot;,&#xd;
    &quot;actors&quot;: [&quot;Bibliotekarz&quot;, &quot;Sprzątaczka&quot;],&#xd;
    &quot;system_actors&quot;: [&quot;System&quot;, &quot;Systemy&quot;],&#xd;
    &quot;steps&quot;: [&#xd;
    	&quot;Bibliotekarz wybiera opcje dodania nowej pozycji książkowej&quot;, &#xd;
    	&quot;Wyświetla się formularz&quot;, &#xd;
    	&quot;Sprzątaczka otwiera okno&quot;,&#xd;
    	&quot;Bibliotekarz podaje dane książki&quot;, &#xd;
    	&quot;IF: Bibliotekarz pragnie dodać egzemplarze książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		]&#xd;
    	],&#xd;
    	&quot;Bibliotekarz zatwierdza dodanie książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		],&#xd;
    		&quot;Zrobione&quot;&#xd;
    	],&#xd;
    	&quot;System informuje o poprawnym dodaniu książki&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">showScenario/2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Assertion" enabled="true">
            <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
            <stringProp name="SizeAssertion.size">756</stringProp>
            <intProp name="SizeAssertion.operator">1</intProp>
          </SizeAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.steps.[7]</stringProp>
            <stringProp name="EXPECTED_VALUE">5.3. FOR EACH: egzemplarz:</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.steps.[11]</stringProp>
            <stringProp name="EXPECTED_VALUE">6.3. FOR EACH: egzemplarz:</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request [countSteps]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Dodanie książki&quot;,&#xd;
    &quot;actors&quot;: [&quot;Bibliotekarz&quot;, &quot;Sprzątaczka&quot;],&#xd;
    &quot;system_actors&quot;: [&quot;System&quot;, &quot;Systemy&quot;],&#xd;
    &quot;steps&quot;: [&#xd;
    	&quot;Bibliotekarz wybiera opcje dodania nowej pozycji książkowej&quot;, &#xd;
    	&quot;Wyświetla się formularz&quot;, &#xd;
    	&quot;Sprzątaczka otwiera okno&quot;,&#xd;
    	&quot;Bibliotekarz podaje dane książki&quot;, &#xd;
    	&quot;IF: Bibliotekarz pragnie dodać egzemplarze książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		]&#xd;
    	],&#xd;
    	&quot;Bibliotekarz zatwierdza dodanie książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		],&#xd;
    		&quot;Zrobione&quot;&#xd;
    	],&#xd;
    	&quot;System informuje o poprawnym dodaniu książki&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">countSteps</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.stepsNumber</stringProp>
            <stringProp name="EXPECTED_VALUE">22</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request [countKeyWordSteps]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Dodanie książki&quot;,&#xd;
    &quot;actors&quot;: [&quot;Bibliotekarz&quot;, &quot;Sprzątaczka&quot;],&#xd;
    &quot;system_actors&quot;: [&quot;System&quot;, &quot;Systemy&quot;],&#xd;
    &quot;steps&quot;: [&#xd;
    	&quot;Bibliotekarz wybiera opcje dodania nowej pozycji książkowej&quot;, &#xd;
    	&quot;Wyświetla się formularz&quot;, &#xd;
    	&quot;Sprzątaczka otwiera okno&quot;,&#xd;
    	&quot;Bibliotekarz podaje dane książki&quot;, &#xd;
    	&quot;IF: Bibliotekarz pragnie dodać egzemplarze książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		]&#xd;
    	],&#xd;
    	&quot;Bibliotekarz zatwierdza dodanie książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		],&#xd;
    		&quot;Zrobione&quot;&#xd;
    	],&#xd;
    	&quot;System informuje o poprawnym dodaniu książki&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">countKeyWordSteps</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.keywordStepsNumber</stringProp>
            <stringProp name="EXPECTED_VALUE">3</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request [wrongSteps]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Dodanie książki&quot;,&#xd;
    &quot;actors&quot;: [&quot;Bibliotekarz&quot;, &quot;Sprzątaczka&quot;],&#xd;
    &quot;system_actors&quot;: [&quot;System&quot;, &quot;Systemy&quot;],&#xd;
    &quot;steps&quot;: [&#xd;
    	&quot;Bibliotekarz wybiera opcje dodania nowej pozycji książkowej&quot;, &#xd;
    	&quot;Wyświetla się formularz&quot;, &#xd;
    	&quot;Sprzątaczka otwiera okno&quot;,&#xd;
    	&quot;Bibliotekarz podaje dane książki&quot;, &#xd;
    	&quot;IF: Bibliotekarz pragnie dodać egzemplarze książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		]&#xd;
    	],&#xd;
    	&quot;Bibliotekarz zatwierdza dodanie książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		],&#xd;
    		&quot;Zrobione&quot;&#xd;
    	],&#xd;
    	&quot;System informuje o poprawnym dodaniu książki&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">wrongSteps</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Assertion" enabled="true">
            <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
            <stringProp name="SizeAssertion.size">192</stringProp>
            <intProp name="SizeAssertion.operator">1</intProp>
          </SizeAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request [ERROR]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Dodanie książki&quot;,&#xd;
    &quot;actors&quot;: [&quot;Bibliotekarz&quot;, &quot;Sprzątaczka&quot;],&#xd;
    &quot;system_actors&quot;: [&quot;System&quot;, &quot;Systemy&quot;],&#xd;
    &quot;steps&quot;: [&#xd;
    	&quot;Bibliotekarz wybiera opcje dodania nowej pozycji książkowej&quot;, &#xd;
    	&quot;Wyświetla się formularz&quot;, &#xd;
    	&quot;Sprzątaczka otwiera okno&quot;,&#xd;
    	&quot;Bibliotekarz podaje dane książki&quot;, &#xd;
    	&quot;IF: Bibliotekarz pragnie dodać egzemplarze książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		]&#xd;
    	],&#xd;
    	&quot;Bibliotekarz zatwierdza dodanie książki&quot;,&#xd;
    	[&#xd;
    		&quot;Bibliotekarz wybiera opcję definiowania egzemplarzy&quot;,&#xd;
    		&quot;System prezentuje zdefiniowane egzemplarze&quot;,&#xd;
    		&quot;FOR EACH: egzemplarz:&quot;,&#xd;
    		[&#xd;
    			&quot;Bibliotekarz wybiera opcję dodania egzemplarza&quot;,&#xd;
    			&quot;Systemy prosi o podanie danych egzemplarza&quot;,&#xd;
    			&quot;Bibliotekarz podaje dane egzemplarza i zatwierdza&quot;,&#xd;
    			&quot;System informuje o poprawnym dodaniu egzemplarza i prezentuje zaktualizowaną listę egzemplarzy&quot;&#xd;
    		],&#xd;
    		&quot;Zrobione&quot;&#xd;
    	],&#xd;
    	&quot;System informuje o poprawnym dodaniu książki&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">rfvbnm</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3938">{}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
